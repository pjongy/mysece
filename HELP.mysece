volatilty
  Open memory dump
    $ volatility -f {DUMP}

gdb(with gef, peda)
  Open binary with gdb
    $ gdb {BINARY_FILE}

    Start debugging
      (gdb) starti

    Continue
      (gdb) c

    Run
      (gdb) r

    Show info of *
      (gdb) info

    Breakpoint
      (gdb) b *{ADDRESS/SYMBOL}

    Memory view
      (gdb) x/{BYTE_SIZE} {ADDRESS/SYMBOL}

    GEF
      HELP
        (gdb) gef

      Show context
        (gdb) ctx

      Enable/disable context
        (gdb) gef config context.enable 1
        (gdb) gef config context.enable 0


pwntools
  Run python
    $ python3

    Import pwn
      >>> import pwn

one-gadget (rop one gadget finder)
  Find gadget in binary
    $ one_gadget {BINARY_FILE}

radare2 (disassembler)
  Load binary with radare2
    $ r2 {BINARY_FILE}

  Load binary as debug mode with radare2
    $ r2 -d {BINARY_FILE}

    Run debug
      [r2] ood

    Show binary info
      [r2] iI

    Help
      [r2] ?

    Analyze
      All
        [r2] aa

      Function
        [r2] af

      Rename function
        [r2] afn

    Disassemble address
      [r2] pdf {@ ADDRESS/SYMBOL/$$ OFFSET}

    Decompile with ghidra
      [r2] pdg {@ ADDRESS/SYMBOL/$$ OFFSET}

    Decompile current offset and print with r2dec
      [r2] pdd

    Xref to
      [r2] axt

    Xref from
      [r2] axf

    Visual mode
      [r2] V

      Move offset
        g

      Change view type
        p

      Show graph
        V

      Convert cursor/move mode
        c

    Panel mode
      [r2] v

      Show cursor
        c

      Graph mode
        V

        Functions
          v
      Menu
        m

      Window setup mode
        w

        Set panel size
          [Shift] + h/j/k/l (or arrow)

        Rotate panel (vertical)
          t/T

        Rotate panel (horizontal)
          p/P

      Help
        ?

      Exit
        q

      Define cursor as string, function ...(Show options)
        d

        Rename a function
          dr

      Cross reference
        x

    Print
      [r2] px {@ ADDRESS/SYMBOL/$$ OFFSET}

    Change current offset
      [r2] s {@ ADDRESS/SYMBOL/$$ OFFSET}

    Project

      Project save (into ~/.local/share/radare2/projects)
        [r2] Ps {PROJECT_NAME}

      Load project
        [r2] Po {PROJECT_NAME}

      Delete project
        [r2] P- {PROJECT_NAME}


radiff2 (radare2 binary differ)
  Show unmatched functions
    $ radiff2 -AC -a x86 /bin/true /bin/false | grep UNMATCH

  Show diff graph for DarunGrim
    $ radiff2 -md -g main /bin/true /bin/false


angr
  Run python
    $ python3

    Import angr
      >>> import angr

metasploit
  Run msf
    $ msf


jadx (dex to java decompiler)
  Run jadx
    $ jadx


ghidriff (binary diffing tool via ghidra)
  Run ghidriff
    $ ghidriff OLD_VERSION_BIN NEW_VERSION_BIn


ghidrecomp (binary decompiler tool via ghidra)
  Run ghidrecomp
    $ ghidrecomp BIN
